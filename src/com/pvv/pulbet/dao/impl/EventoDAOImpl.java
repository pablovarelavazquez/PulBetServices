package com.pvv.pulbet.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.pvv.pulbet.dao.EventoDAO;
import com.pvv.pulbet.dao.util.ConnectionManager;
import com.pvv.pulbet.dao.util.JDBCUtils;
import com.pvv.pulbet.exception.DataException;
import com.pvv.pulbet.model.Evento;
import com.pvv.pulbet.model.Usuario;

public class EventoDAOImpl implements EventoDAO{

	@Override
	public Evento create(Evento e) throws Exception {
		Connection connection = null; 
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		try {          

			connection = ConnectionManager.getConnection();
			//Check if the primary key already exists
			//			if (exists(connection, e.getId())) {
			//				throw new Exception("Duplicate employee "+e.getId());
			//			}


			String queryString = "INSERT INTO EVENTO(FECHA_HORA,ID_COMPETICION) "
					+ "VALUES (?, ?)";

			preparedStatement = connection.prepareStatement(queryString, Statement.RETURN_GENERATED_KEYS);

			int i = 1;     			
			preparedStatement.setDate(i++, new java.sql.Date(e.getFecha().getTime()));
			preparedStatement.setLong(i++, e.getIdCompeticion());


			int insertedRows = preparedStatement.executeUpdate();

			if (insertedRows == 0) {
				throw new SQLException("Can not add row to table 'Employees'");
			}

			resultSet = preparedStatement.getGeneratedKeys();
			if (resultSet.next()) {
				Long id = resultSet.getLong(1);
				e.setIdEvento(id);				
			} else {
				throw new DataException("Unable to fetch autogenerated primary key");
			}

			//...
			return e;					

		} catch (SQLException ex) {
			throw new DataException(ex);
		} finally {
			JDBCUtils.closeResultSet(resultSet);
			JDBCUtils.closeStatement(preparedStatement);			
			JDBCUtils.closeConnection(connection);
		}

	}

	@Override
	public boolean update(Evento e) throws Exception {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Long delete(Long id) throws Exception {
		Connection connection = null; 
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;

		try {
			connection = ConnectionManager.getConnection();

			String queryString =	
					"DELETE FROM EVENTO " 
					+ "WHERE ID_EVENTO = ? ";


			preparedStatement = connection.prepareStatement(queryString);

			int i = 1;
			preparedStatement.setLong(i++, id);

			long removedRows = preparedStatement.executeUpdate();


			return removedRows;

		} catch (SQLException e) {
			throw new DataException(e);
		} finally {
			JDBCUtils.closeStatement(preparedStatement);
		}
	}
	
	@Override
	public List<Evento> findAll() throws Exception {
		Connection connection = null;
		PreparedStatement preparedStatement = null;
		ResultSet resultSet = null;
		try {
			connection = ConnectionManager.getConnection();

			String sql;
			sql =  "SELECT ID_EVENTO, FECHA_HORA, ID_COMPETICION "
					+"FROM EVENTO ";

			// Preparar a query
			System.out.println("Creating statement...");
			preparedStatement = connection.prepareStatement(sql, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);

			resultSet = preparedStatement.executeQuery();			
			//STEP 5: Extract data from result set			

			List<Evento> results = new ArrayList<Evento>();                        
			Evento e = null;


			while(resultSet.next()) {
				e = loadNext(resultSet);
				results.add(e);               	
			}

			return results;

		} catch (SQLException ex) {
			throw new DataException(ex);
		} finally {            
			JDBCUtils.closeResultSet(resultSet);
			JDBCUtils.closeStatement(preparedStatement);
			JDBCUtils.closeConnection(connection);
		}
	}

	@Override
	public Evento findById(Integer id) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Evento> findByParticipante(Integer id) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Evento> findByCompeticion(Integer id) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<Evento> findByDeporte(Integer id) throws Exception {
		// TODO Auto-generated method stub
		return null;
	}

private Evento loadNext(ResultSet resultSet) throws Exception{

		
		Evento e = new Evento();
		int i = 1;
		Long id = resultSet.getLong(i++);
		Date fecha = resultSet.getDate(i++);
		Long idComp = resultSet.getLong(i++);

		e.setIdEvento(id);
		e.setFecha(fecha);
		e.setIdCompeticion(idComp);
		
		return e;

	}
	

}
